let selectedCells = [];
let  lives = 3;
function renderBoard(board) {
    const boardDiv = document.getElementById("board");
    boardDiv.innerHTML = ""; // –æ—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª–µ

    let hasAliveCells = false; // —Ñ–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∂–∏–≤—ã—Ö —è—á–µ–µ–∫

    board.forEach((row, y) => {
        row.forEach((cell, x) => {
            const cellDiv = document.createElement("div");
            cellDiv.className = "cell";
            if (cell.id === -1) {
                cellDiv.style.backgroundColor = "black";
            } else {
                cellDiv.textContent = cell.id;
                hasAliveCells = true; // –Ω–∞—à–ª–∏ –∂–∏–≤—É—é –∫–ª–µ—Ç–∫—É
            }

            cellDiv.onclick = () => onCellClick(cellDiv, { ...cell, x, y }, x, y);
            boardDiv.appendChild(cellDiv);
        });
    });

    // ‚úÖ –ï—Å–ª–∏ –Ω–µ—Ç –∂–∏–≤—ã—Ö –∫–ª–µ—Ç–æ–∫ ‚Äî –ø–æ–±–µ–¥–∞!
    if (!hasAliveCells) {
        setTimeout(() => {
            window.location.href = "/victory.html"; // ‚Üê –ø—É—Ç—å –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–±–µ–¥—ã
        }, 500); // –Ω–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –∏–≥—Ä–æ–∫ —É—Å–ø–µ–ª —É–≤–∏–¥–µ—Ç—å –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ
    }
}
function updateLivesText() {
    const livesText = document.getElementById("lives");
    livesText.textContent = `‚ù§Ô∏è Lives: ${lives}`;
}

document.getElementById("restartBtn").addEventListener("click", () => {
    if (lives <= 0) {
        alert("üòµ –£ –≤–∞—Å –Ω–µ—Ç –∂–∏–∑–Ω–µ–π! –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã.");
        return;
    }

    fetch('/api/restart', { method: 'POST' })
        .then(res => res.json())
        .then(success => {
            if (success) {
                lives--;
                updateLivesText();
                console.log("‚úÖ –î–æ—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞");
                fetch('/api/board')
                    .then(res => res.json())
                    .then(renderBoard);
            } else {
                console.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–æ—Å–∫—É");
            }
        })
        .catch(err => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä—Ç–µ:", err));
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —è—á–µ–π–∫–µ
function onCellClick(div, cell, x, y) {
    if (lives <= 0) {
        alert("üòµ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ù–∞–∂–º–∏—Ç–µ —Ä–µ—Å—Ç–∞—Ä—Ç.");
        return;
    }

    if (selectedCells.length >= 2) {
        clearSelection();
    }

    div.classList.add('selected');
    selectedCells.push({ cell, element: div });

    if (selectedCells.length === 2) {
        const [a, b] = selectedCells;
        sendKillRequest(a, b); // <== –≤–æ—Ç –æ–Ω–æ
    }
}


// –°–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞
function clearSelection() {
    selectedCells.forEach(({ element }) => element.classList.remove('selected'));
    selectedCells = [];
}

function sendKillRequest(a, b) {
    fetch('/api/kill', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify([a.cell, b.cell])
    })
        .then(res => res.json())
        .then(success => {
            if (success) {
                console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ! –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –¥–æ—Å–∫—É...');
                fetch('/api/board')
                    .then(res => res.json())
                    .then(renderBoard);
            } else {
                console.log('‚ùå –≠—Ç–∏ –∫–ª–µ—Ç–∫–∏ –Ω–µ–ª—å–∑—è —Å–æ–µ–¥–∏–Ω–∏—Ç—å');
            }
            clearSelection(); // –æ—á–∏—â–∞–µ–º –≤—ã–±–æ—Ä –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Å–ø–µ—Ö–∞
        })
        .catch(err => console.error('–û—à–∏–±–∫–∞:', err));
}



// –°–ª—É—à–∞—Ç–µ–ª—å –∫–ª–∏–∫–∞ –≤–Ω–µ –¥–æ—Å–∫–∏
document.addEventListener('click', (e) => {
    // –µ—Å–ª–∏ –∫–ª–∏–∫ –≤–Ω–µ .cell ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    if (!e.target.classList.contains('cell')) {
        clearSelection();
    }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å–∫–∏
fetch('/api/board')
    .then(res => res.json())
    .then(renderBoard);
